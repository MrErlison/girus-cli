apiVersion: v1
kind: ConfigMap
metadata:
  name: linux-administración-usuarios-lab-es
  namespace: girus
  labels:
    app: girus-lab-template
data:
  lab.yaml: |
    name: linux-administración-usuarios-es
    title: "Administração de Usuários e Grupos no Linux"
    description: "aprende os fundamentos de administración de identidade no Linux, incluindo criação e configuração de contas de usuários, grupos, permissões de acesso e política de senhas. Este laboratorio guiado apresenta conceitos essenciais para administradores de sistemas, explorando os archivos de sistema relacionados e comandos fundamentais para administrar usuários e grupos de forma eficiente e segura."
    duration: 25m
    image: "linuxtips/girus-devops:0.1"
    tasks:
      - name: "Fundamentos do Sistema de Usuários no Linux"
        description: "Compreenda como o Linux gerencia usuários, grupos e autenticação através dos archivos do sistema."
        steps:
          - "**Arquitetura de administración de Usuários no Linux**"
          - "O Linux é un sistema multiusuário projetado para permitir que vários usuários compartilhem recursos do sistema de forma segura e isolada. O administración de identidade no Linux é baseado em três conceitos fundamentais:"
          - "1. **Usuários**: Entidades que podem acessar o sistema e possuem archivos"
          - "2. **Grupos**: Coleções de usuários que compartilham permissões"
          - "3. **Permissões**: Controles de acesso para archivos e recursos"
          - "**archivos Principais de administración de Usuários:**"
          - "- **/etc/passwd**: Armazena informações básicas dos usuários"
          - "- **/etc/shadow**: Armazena senhas criptografadas dos usuários"
          - "- **/etc/group**: Armazena informações sobre grupos"
          - "- **/etc/gshadow**: Armazena informações sensíveis sobre grupos"
          - "- **/etc/login.defs**: Define políticas de senhas e configurações de contas"
          - "- **/etc/skel/**: directorio contendo archivos que são copiados para o directorio home de novos usuários"
          - "**Estrutura do archivo /etc/passwd:**"
          - "vamos examinar o archivo '/etc/passwd' que contém informações de usuários. Cada linha representa un usuário e possui sete campos separados por dois pontos (:):"
          - "`cat /etc/passwd | head -5`"
          - "O formato é: `nome_usuário:senha:UID:GID:comentário:directorio_home:shell`"
          - "- **nome_usuário**: Nome da conta do usuário"
          - "- **senha**: Historicamente continha a senha criptografada, agora contém 'x' indicando que a senha está em /etc/shadow"
          - "- **UID**: User ID, identificador numérico único do usuário (0 para root, 1-999 geralmente para usuários de sistema, 1000+ para usuários regulares)"
          - "- **GID**: Group ID, identificador numérico do grupo principal do usuário"
          - "- **comentário**: Informações descritivas sobre o usuário (nome completo, departamento, etc.)"
          - "- **directorio_home**: directorio inicial do usuário"
          - "- **shell**: Shell padrão do usuário"
          - "**Tipos de Usuários**"
          - "O Linux distingue entre diferentes tipos de usuários:"
          - "- **Root (UID 0)**: O superusuário com todos os privilégios administrativos"
          - "- **Usuários de Sistema (UID 1-999)**: Usuários não-humanos usados para executar servicios e daemons"
          - "- **Usuários Regulares (UID 1000+)**: Contas para usuários humanos"
          - "vamos visualizar informações sobre alguns usuários específicos:"
          - "`grep root /etc/passwd`  # Superusuário"
          - "`grep ^daemon /etc/passwd`  # ejemplo de usuário de sistema"
          - "**Informações sobre Usuário Atual**"
          - "O comando `id` mostra detalhes sobre o usuário atual ou un usuário específico:"
          - "`id`"
          - "usted verá o UID (ID do usuário), GID (ID do grupo principal) e a lista de grupos aos quais o usuário pertence."
        tips:
          - type: "info"
            title: "Bancos de Dados Alternativos"
            content: "Além dos archivos locais, o Linux pode utilizar outros mecanismos para autenticação e administración de usuários, como LDAP, Active Directory, NIS, ou Kerberos para ambientes de rede maiores."
          - type: "warning"
            title: "Segurança dos archivos"
            content: "Os archivos /etc/shadow e /etc/gshadow são acessíveis apenas pelo usuário root para proteger as senhas. Nunca modifique diretamente esses archivos; sempre use as ferramentas apropriadas como passwd, useradd, usermod, etc."
          - type: "tip"
            title: "Usuários Especiais"
            content: "Além do root, existem outros usuários especiais como nobody (usado para executar servicios com privilégios mínimos) e vários usuários de sistema específicos para servicios."
        validation:
          - command: "grep -q root /etc/passwd && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "Não foi possível acessar as informações de usuário em /etc/passwd."
          - command: "id | grep -q uid && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "O comando 'id' não está funcionando corretamente."

      - name: "creando e Gerenciando Usuários"
        description: "aprende a crear, modificar e remover contas de usuários utilizando as ferramentas de linha de comando apropriadas."
        steps:
          - "**creando un Novo Usuário**"
          - "O comando `useradd` é usado para crear novas contas de usuário. vamos explorar seu uso e opções:"
          - "crea un usuário básico chamado 'testuser':"
          - "`sudo useradd testuser`"
          - "Este comando cria un usuário com configurações padrão definidas em /etc/default/useradd e /etc/login.defs."
          - "**Opções comuns do useradd:**"
          - "- `-m`: Cria o directorio home (em algumas distribuições, é o compuertomento padrão)"
          - "- `-d /caminho`: Especifica un directorio home personalizado"
          - "- `-s /caminho/para/shell`: Define o shell padrão"
          - "- `-c \"comentário\"`: Adiciona un comentário (geralmente o nome completo)"
          - "- `-g grupo`: Define o grupo principal"
          - "- `-G grupo1,grupo2`: Adiciona a grupos secundários"
          - "- `-e YYYY-MM-DD`: Define data de expiração da conta"
          - "**Definindo uma Senha**"
          - "Após crear un usuário, é necessário definir uma senha usando o comando `passwd`:"
          - "`sudo passwd testuser`"
          - "O sistema solicitará a nova senha duas vezes. Por razões de segurança, os caracteres digitados não serão exibidos."
          - "**Políticas de Senhas**"
          - "O Linux possui regras para garantir senhas fortes, definidas em /etc/login.defs e implementadas por módulos PAM (Pluggable Authentication Modules). Estas regras geralmente incluem:"
          - "- Comprimento mínimo da senha"
          - "- Complexidade (letras maiúsculas, minúsculas, números, caracteres especiais)"
          - "- Histórico (impedir reuso de senhas anteriores)"
          - "- Idade mínima e máxima da senha"
          - "**Visualizando Informações do Usuário**"
          - "Para ver detalhes sobre o usuário criado:"
          - "`id testuser`"
          - "Para ver entradas específicas no archivo passwd:"
          - "`grep testuser /etc/passwd`"
          - "**Modificando Usuários Existentes**"
          - "O comando `usermod` permite modificar contas de usuário existentes. Algumas operações comuns:"
          - "Alterar o shell padrão para bash:"
          - "`sudo usermod -s /bin/bash testuser`"
          - "Adicionar un comentário (geralmente o nome completo):"
          - "`sudo usermod -c \"Usuário de Teste\" testuser`"
          - "Alterar o directorio home (não move os archivos):"
          - "`sudo usermod -d /home/newhome testuser`"
          - "Expirar a senha forçando a mudança no próximo login:"
          - "`sudo passwd -e testuser`"
          - "Bloquear/desbloquear uma conta:"
          - "`sudo passwd -l testuser`  # bloqueia"
          - "`sudo passwd -u testuser`  # desbloqueia"
          - "**Removendo Usuários**"
          - "O comando `userdel` remove contas de usuário:"
          - "`sudo userdel testuser`  # Remove a conta, mas mantém o directorio home"
          - "`sudo userdel -r testuser`  # Remove a conta e o directorio home"
          - "**Alterando sua Própria Senha**"
          - "Usuários comuns podem alterar suas próprias senhas com:"
          - "`passwd`"
          - "O sistema solicitará a senha atual e depois a nova senha duas vezes."
        tips:
          - type: "info"
            title: "comandos Alternativos"
            content: "Algumas distribuições Linux oferecem comandos de mais alto nível como 'adduser' (em vez de useradd) que são interativos e mais amigáveis, solicitando informações como senha e comentários durante a criação."
          - type: "warning"
            title: "Segurança e Diretrizes"
            content: "Mantenha uma política clara sobre criação e remoção de usuários. Para usuários temporários, defina sempre uma data de expiração com 'usermod -e'. Remova contas não utilizadas para reduzir a superfície de ataque."
          - type: "tip"
            title: "Desabilitando Login"
            content: "Para contas de sistema que não precisam fazer login interativo, defina o shell como '/sbin/nologin' ou '/bin/false' para impedir acessos."
        validation:
          - command: "id testuser &> /dev/null && echo 'Usuário existe' || echo 'Usuário não existe'"
            expectedOutput: "Usuário existe"
            errorMessage: "O usuário testuser não foi criado corretamente."
          - command: "grep \"Usuário de Teste\" /etc/passwd | wc -l"
            expectedOutput: "1"
            errorMessage: "O comentário não foi adicionado corretamente ao usuário."
      
      - name: "administración de Grupos"
        description: "aprende a crear, modificar e administrar grupos, entendendo como eles funcionam para controle de acesso no Linux."
        steps:
          - "**Conceito e Funcionamento de Grupos**"
          - "Os grupos no Linux são utilizados para organizar usuários e simplificar o administración de permissões. Ao invés de atribuir permissões a cada usuário individualmente, usted pode atribuí-las a un grupo e depois adicionar usuários a esse grupo."
          - "**Tipos de Grupos:**"
          - "- **Grupo Primário**: Cada usuário pertence a un grupo primário (definido em /etc/passwd)"
          - "- **Grupos Secundários**: Usuários podem pertencer a múltiplos grupos secundários (definidos em /etc/group)"
          - "**Visualizando Informações de Grupos**"
          - "O archivo /etc/group contém as definições de grupos no sistema:"
          - "`cat /etc/group | head -10`"
          - "Cada linha possui quatro campos separados por dois pontos: `nome_grupo:senha:GID:membros`"
          - "- **nome_grupo**: Nome do grupo"
          - "- **senha**: Raramente usada, geralmente contém 'x' indicando que a senha está em /etc/gshadow"
          - "- **GID**: Group ID, identificador numérico único do grupo"
          - "- **membros**: Lista separada por vírgulas dos usuários que pertencem ao grupo como secundário"
          - "Para ver os grupos aos quais un usuário pertence:"
          - "`groups`  # para o usuário atual"
          - "`groups testuser`  # para un usuário específico"
          - "**creando Novos Grupos**"
          - "O comando `groupadd` cria novos grupos:"
          - "`sudo groupadd projeto`"
          - "Opções comuns do groupadd:"
          - "- `-g GID`: Especifica un GID particular"
          - "- `-r`: Cria un grupo de sistema (com GID baixo)"
          - "**Adicionando Usuários a Grupos**"
          - "Existem várias maneiras de adicionar usuários a grupos:"
          - "1. Usando `usermod` (para usuários existentes):"
          - "`sudo usermod -aG projeto testuser`"
          - "A opção `-a` (append) é crucial - sem ela, o usuário será removido de todos os grupos não listados!"
          - "2. Ao crear o usuário com `useradd`:"
          - "`sudo useradd -G projeto colaborador`"
          - "3. Usando o comando `gpasswd`:"
          - "`sudo gpasswd -a testuser projeto`"
          - "**Definindo uma Senha para o Novo Usuário**"
          - "`sudo passwd colaborador`"
          - "**Removendo Usuários de Grupos**"
          - "Para remover un usuário de un grupo:"
          - "`sudo gpasswd -d testuser projeto`"
          - "ou"
          - "`sudo deluser testuser projeto`  # em algumas distribuições"
          - "**Alterando o Grupo Primário de un Usuário**"
          - "Para mudar o grupo primário de un usuário:"
          - "`sudo usermod -g projeto testuser`"
          - "**Modificando e Removendo Grupos**"
          - "Para alterar o nome de un grupo:"
          - "`sudo groupmod -n novo_nome antigo_nome`"
          - "Para remover un grupo:"
          - "`sudo groupdel projeto`"
          - "Note que usted não pode remover o grupo primário de un usuário existente."
          - "**Listando Membros de un Grupo**"
          - "Para listar todos os membros de un grupo específico:"
          - "`getent group projeto`"
          - "ou"
          - "`grep projeto /etc/group`"
        tips:
          - type: "info"
            title: "Grupos Especiais"
            content: "Alguns grupos têm significados especiais no Linux: 'wheel' ou 'sudo' (acesso administrativo via sudo), 'audio' (acesso a dispositivos de áudio), 'video' (acesso a dispositivos gráficos), 'docker' (acesso ao daemon Docker), etc."
          - type: "tip"
            title: "Privacidade entre Usuários"
            content: "Para crear grupos onde os usuários não podem acessar archivos uns dos outros, considere usar o comando 'chmod g+s' no directorio compartilhado, combinado com umask restritivo."
          - type: "warning"
            title: "Efeito de Alterações"
            content: "Alterações em grupos geralmente não afetam sessões já existentes. Os usuários precisam fazer logout e login novamente, ou usar o comando 'newgrp' para ativar a participação em un novo grupo na sessão atual."
        validation:
          - command: "grep projeto /etc/group | wc -l"
            expectedOutput: "1"
            errorMessage: "O grupo 'projeto' não foi criado corretamente."
          - command: "groups testuser | grep -q projeto && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "O usuário 'testuser' não foi adicionado ao grupo 'projeto'."

      - name: "Casos de Uso Práticos e Melhores Práticas"
        description: "Aplique o conhecimento adquirido em cenários reais e conheça as melhores práticas de administração de usuários e grupos."
        steps:
          - "**Cenário 1: creando un Grupo de Projeto e Configurando Acesso Compartilhado**"
          - "un cenário comun é crear un espaço compartilhado para uma equipe trabalhando no mesmo projeto:"
          - "1. crear un grupo para o projeto:"
          - "`sudo groupadd projeto_web`"
          - "2. crear un directorio compartilhado:"
          - "`sudo mkdir -p /projetos/web`"
          - "3. Definir o grupo proprietário do directorio:"
          - "`sudo chgrp projeto_web /projetos/web`"
          - "4. Configurar permissões para colaboração:"
          - "`sudo chmod 2775 /projetos/web`"
          - "O bit SGID (2) garante que novos archivos criados herdem o grupo do directorio."
          - "5. Adicionar usuários ao grupo:"
          - "`sudo usermod -aG projeto_web testuser`"
          - "`sudo usermod -aG projeto_web colaborador`"
          - "6. Verificar que tudo está correto:"
          - "`ls -ld /projetos/web`"
          - "**Cenário 2: Configurando un Usuário de servicio**"
          - "Para servicios que precisam de seu próprio usuário com acesso limitado:"
          - "1. crear un usuário de sistema sem home e sem login:"
          - "`sudo useradd -r -s /sbin/nologin -c \"Usuário do servidor web\" webserver`"
          - "2. Configurar permissões apropriadas para directorios de servicio:"
          - "`sudo mkdir -p /var/www/html`"
          - "`sudo chown webserver:webserver /var/www/html`"
          - "**Melhores Práticas de Segurança**"
          - "1. **Política de Privilégio Mínimo**: Conceda apenas os privilégios necessários para cada usuário ou grupo."
          - "2. **Use sudo em vez de root direto**: Configure sudo para permitir ações administrativas controladas."
          - "3. **Revise Regularmente**: Audite as contas de usuários e grupos para remover contas inativas ou desnecessárias."
          - "4. **Implemente Expiração**: Configure expiração de senhas para forçar atualizações regulares."
          - "5. **Monitoramento**: Mantenha logs de autenticação e configure alertas para falhas de login."
          - "6. **Desativar ao invés de Remover**: Para funcionários que saem, bloqueie as contas em vez de excluí-las imediatamente."
          - "**Automatizando administración de Usuários**"
          - "Para ambientes maiores, considere ferramentas como:"
          - "- **Scripts Shell**: Para criação em massa de usuários"
          - "- **Ansible, Puppet, Chef**: Para administración de configuração"
          - "- **LDAP ou Active Directory**: Para autenticação centralizada"
          - "- **SSSD, Kerberos, FreeIPA**: Para implementações mais complexas"
        tips:
          - type: "info"
            title: "Gerenciando Acesso Temporário"
            content: "Para acessos temporários, use 'sudo usermod -e YYYY-MM-DD username' para definir uma data de expiração da conta. A conta será automaticamente desabilitada após essa data."
          - type: "warning"
            title: "Evite Edição Manual de archivos"
            content: "Nunca edite manualmente /etc/passwd, /etc/shadow ou /etc/group. Use sempre as ferramentas apropriadas (useradd, usermod, groupadd, etc.) para evitar inconsistências ou problemas de segurança."
          - type: "tip"
            title: "Documentação"
            content: "Mantenha documentação atualizada sobre políticas de usuários, grupos e suas finalidades. Em ambientes empresariais, integre com sistemas de administración de identidade e provisionamento automático."
        validation:
          - command: "grep -q projeto_web /etc/group && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "O grupo projeto_web não foi criado corretamente."
          - command: "id webserver &> /dev/null && echo 'ok' || echo 'usuário não existe'"
            expectedOutput: "ok"
            errorMessage: "O usuário de servicio webserver não foi criado corretamente."
