apiVersion: v1
kind: ConfigMap
metadata:
  name: linux-permissoes-archivos-lab-es
  namespace: girus
  labels:
    app: girus-lab-template
data:
  lab.yaml: |
    name: linux-permissoes-archivos-es
    title: "Permissões de archivos no Linux"
    description: "aprende a visualizar e modificar permissões de archivos e directorios no Linux"
    duration: 15m
    image: "linuxtips/girus-devops:0.1"
    youtubeVideo: "https://www.youtube.com/watch?v=tT69ipXOzfc"
    tasks:
      - name: "Entendendo Permissões Básicas"
        description: "aprende a visualizar e interpretar permissões de archivos e directorios"
        steps:
          - "crea un directorio para o exercício:"
          - "`mkdir ~/permissoes`"
          - "Entre no directorio:"
          - "`cd ~/permissoes`"
          - "crea archivos de teste:"
          - "`touch archivo1.txt archivo2.txt`"
          - "Visualize as permissões atuais:"
          - "`ls -la`"
          - "Observe o formato das permissões - **[tipo][dono][grupo][outros]**"
          - "ejemplo - **-rw-r--r--** significa archivo comum, dono pode ler e escrever, grupo e outros só podem ler"
          - "crea un script simples:"
          - "`echo '#!/bin/bash' > script.sh`"
          - "`echo 'echo \"Hello, World!\"' >> script.sh`"
          - "Tente executar o script:"
          - "`./script.sh`"
          - "usted verá uma mensagem de permissão negada"
        tips:
          - type: "info"
            title: "Formato das permissões"
            content: "As permissões são representadas por 10 caracteres - o primeiro indica o tipo (**-** para archivo, **d** para directorio), seguido por três grupos de **rwx** (read, write, execute) para dono, grupo e outros."
          - type: "tip"
            title: "Significado dos modos"
            content: "**r** (4) - permissão de leitura, **w** (2) - permissão de escrita, **x** (1) - permissão de execução. Os valores numéricos são somados para definir as permissões em octal."
        validation:
          - command: "test -f ~/permissoes/script.sh && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "O archivo script.sh não foi criado corretamente"
      
      - name: "Modificando Permissões"
        description: "aprende a modificar permissões de archivos usando chmod"
        steps:
          - "Adicione permissão de execução ao script criado anteriormente:"
          - "`chmod +x script.sh`"
          - "verifique as novas permissões:"
          - "`ls -la script.sh`"
          - "Agora execute o script:"
          - "`./script.sh`"
          - "Defina permissões usando notação octal:"
          - "`chmod 644 archivo1.txt`"
          - "`chmod 640 archivo2.txt`"
          - "verifique as permissões após a mudança:"
          - "`ls -la archivo*.txt`"
          - "Use chmod recursivo para modificar permissões em lote:"
          - "`mkdir -p subdir/subsubdir`"
          - "`touch subdir/file1 subdir/subsubdir/file2`"
          - "`chmod -R 750 subdir`"
          - "verifique as permissões recursivas:"
          - "`ls -la subdir`"
          - "`ls -la subdir/subsubdir`"
        tips:
          - type: "info"
            title: "Notação simbólica vs octal"
            content: "usted pode usar notação simbólica (chmod u+x) ou octal (chmod 755). Em octal, cada dígito representa as permissões para dono, grupo e outros, respectivamente."
          - type: "warning"
            title: "Permissões e segurança"
            content: "Permissões muito abertas (ex: 777) representam riscos de segurança. Use sempre as permissões mínimas necessárias."
        validation:
          - command: "test -x ~/permissoes/script.sh && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "O script não tem permissão de execução"
          - command: "stat -c %a ~/permissoes/archivo1.txt"
            expectedOutput: "644"
            errorMessage: "O archivo1.txt não tem as permissões corretas (644)"
      
      - name: "Propriedade de archivos e umask"
        description: "aprende a alterar o proprietário dos archivos e configurar o umask"
        steps:
          - "Veja o proprietário atual dos archivos:"
          - "`ls -la`"
          - "verifique o umask atual:"
          - "`umask`"
          - "crea un novo archivo com o umask padrão:"
          - "`touch archivo_umask_padrao.txt`"
          - "`ls -la archivo_umask_padrao.txt`"
          - "Mude temporariamente o umask para 027:"
          - "`umask 027`"
          - "crea outro archivo com o novo umask:"
          - "`touch archivo_umask_027.txt`"
          - "`ls -la archivo_umask_027.txt`"
          - "Volte ao umask padrão (geralmente 022):"
          - "`umask 022`"
          - "Se usted tiver permissão de sudo, altere o proprietário de un archivo:"
          - "`sudo chown root:root archivo1.txt`"
          - "verifique a mudança de proprietário:"
          - "`ls -la archivo1.txt`"
        tips:
          - type: "info"
            title: "Umask explicado"
            content: "O umask define quais permissões são removidas por padrão ao crear novos archivos e directorios. un umask de 022 remove escrita para grupo e outros, resultando em 644 para archivos e 755 para directorios."
          - type: "tip"
            title: "Permissão padrão"
            content: "A permissão padrão para directorios é 777 e para archivos é 666. O valor do umask é subtraído dessas permissões padrão."
        validation:
          - command: "umask"
            expectedOutput: "0022"
            errorMessage: "O umask não foi revertido para o valor padrão"
          - command: "stat -c %a ~/permissoes/archivo_umask_027.txt 2>/dev/null || echo 'ausente'"
            expectedOutput: "640"
            errorMessage: "O archivo com umask 027 não tem as permissões esperadas ou não foi criado"
