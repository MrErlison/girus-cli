apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-exploracao-recursos-lab-es
  namespace: girus
  labels:
    app: girus-lab-template
data:
  lab.yaml: |
    name: kubernetes-exploracao-recursos-es
    title: "desafío: Explorando Recursos do Kubernetes com kubectl"
    description: "Neste desafío, usted demonstrará suas habilidades na utilização do kubectl para administrar e inspecionar recursos em un cluster Kubernetes."
    duration: 15m
    timerEnabled: true
    maxDuration: 20m
    image: "linuxtips/girus-kind-single-node:0.1" # imagen com Kind/kubectl
    tasks:
      - name: "desafío 1: Configurar un Ambiente de Trabalho"
        description: "Configure un namespace isolado e crea os recursos iniciais necessários."
        steps:
          - "crea un namespace chamado 'desafío-ns' e verifique que está ativo."
          - "crea un pod chamado 'nginx-pod' usando a imagen 'nginx:1.21-alpine' no namespace 'desafío-ns'."
          - "crea un ConfigMap chamado 'nginx-config' no namespace 'desafío-ns' com o par chave-valor: 'SERVER_TYPE=nginx'."
        tips:
          - type: "warning"
            title: "Nomes dos Recursos"
            content: "Utilize exatamente os nomes especificados para cada recurso. A validação verificará esses nomes específicos."
        validation:
          - command: "kubectl get namespace desafío-ns -o jsonpath='{.metadata.name}' 2>/dev/null || echo ''"
            expectedOutput: "desafío-ns"
            errorMessage: "O namespace 'desafío-ns' não foi criado corretamente."
          - command: "kubectl get pod -n desafío-ns -o jsonpath='{.items[?(@.metadata.name==\"nginx-pod\")].spec.containers[0].image}' 2>/dev/null || echo ''"
            expectedOutput: "nginx:1.21-alpine"
            errorMessage: "Não foi encontrado o pod 'nginx-pod' com a imagen 'nginx:1.21-alpine' no namespace 'desafío-ns'."
          - command: "kubectl get configmap -n desafío-ns nginx-config -o jsonpath='{.data.SERVER_TYPE}' 2>/dev/null || echo ''"
            expectedOutput: "nginx"
            errorMessage: "O ConfigMap 'nginx-config' não foi criado corretamente com a chave 'SERVER_TYPE'."

      - name: "desafío 2: Deployments e servicios"
        description: "crea e inspecione deployments e servicios, demonstrando entendimento de como os recursos do Kubernetes se relacionam."
        steps:
          - "crea un deployment chamado 'web-app' no namespace 'desafío-ns' com as seguintes características:"
          - "- imagen: httpd:2.4-alpine"
          - "- Réplicas: 3"
          - "- Label: app=web"
          - "crea un servicio do tipo ClusterIP chamado 'web-service' no namespace 'desafío-ns' que aponte para o deployment 'web-app' na puerto 80."
          - "Escale o deployment 'web-app' para 5 réplicas."
          - "Obtenha o ClusterIP do servicio 'web-service' e verifique se todos os pods estão funcionando corretamente."
        tips:
          - type: "info"
            title: "Verificando Seletores"
            content: "Certifique-se de que o servicio utiliza o seletor correto para encontrar os pods do deployment. A correspondência é feita usando labels."
        validation:
          - command: "kubectl get deployment -n desafío-ns web-app -o jsonpath='{.spec.replicas}' 2>/dev/null || echo ''"
            expectedOutput: "5"
            errorMessage: "O deployment 'web-app' não foi criado corretamente ou não possui 5 réplicas."
          - command: "kubectl get deployment -n desafío-ns web-app -o jsonpath='{.spec.template.spec.containers[0].image}' 2>/dev/null || echo ''"
            expectedOutput: "httpd:2.4-alpine"
            errorMessage: "O deployment 'web-app' não está usando a imagen 'httpd:2.4-alpine'."
          - command: "kubectl get service -n desafío-ns web-service -o jsonpath='{.spec.type}' 2>/dev/null || echo ''"
            expectedOutput: "ClusterIP"
            errorMessage: "O servicio 'web-service' não foi criado ou não é do tipo ClusterIP."
          - command: "kubectl get service -n desafío-ns web-service -o jsonpath='{.spec.ports[0].port}' 2>/dev/null || echo ''"
            expectedOutput: "80"
            errorMessage: "O servicio 'web-service' não está configurado para a puerto 80."

      - name: "desafío 3: Diagnóstico e Solução de Problemas"
        description: "Diagnostique e resolva problemas em un pod com falha, demonstrando habilidades de troubleshooting."
        steps:
          - "crea un pod chamado 'problem-pod' no namespace 'desafío-ns' usando a imagen inexistente 'nginx:invalid-version'."
          - "Aguarde alguns segundos e use 'kubectl describe' para identificar o problema com o pod."
          - "Corrija o problema atualizando o pod para usar a imagen 'nginx:stable-alpine'."
          - "Aguarde até que o pod esteja em estado 'Running'."
        tips:
          - type: "warning"
            title: "Como Corrigir un Pod"
            content: "Pods não podem ser atualizados diretamente. usted precisará excluir o pod com problema e crear un novo com a configuração correta."
        validation:
          - command: "kubectl get pod -n desafío-ns problem-pod -o jsonpath='{.status.phase}' 2>/dev/null || echo ''"
            expectedOutput: "Running"
            errorMessage: "O pod 'problem-pod' não está no estado 'Running'."
          - command: "kubectl get pod -n desafío-ns problem-pod -o jsonpath='{.spec.containers[0].image}' 2>/dev/null || echo ''"
            expectedOutput: "nginx:stable-alpine"
            errorMessage: "O pod 'problem-pod' não está usando a imagen corrigida 'nginx:stable-alpine'."

      - name: "desafío 4: Limpeza Seletiva"
        description: "Demonstre sua capacidade de remover recursos específicos sem afetar todo o ambiente."
        steps:
          - "Remova apenas o pod 'nginx-pod' do namespace 'desafío-ns'."
          - "Remova o deployment 'web-app' e verifique que todos os seus pods foram removidos automaticamente."
          - "Mantenha o pod 'problem-pod' e o servicio 'web-service' ativos."
          - "verifique e liste todos os recursos que ainda existem no namespace 'desafío-ns'."
        tips:
          - type: "info"
            title: "Verificação Pós-Remoção"
            content: "Use 'kubectl get all -n desafío-ns' para verificar quais recursos ainda existem no namespace."
        validation:
          - command: "kubectl get pod -n desafío-ns nginx-pod 2>&1 | grep -i 'not found' || echo 'Pod ainda existe'"
            expectedOutput: "not found"
            errorMessage: "O pod 'nginx-pod' não foi removido corretamente."
          - command: "kubectl get deployment -n desafío-ns web-app 2>&1 | grep -i 'not found' || echo 'Deployment ainda existe'"
            expectedOutput: "not found"
            errorMessage: "O deployment 'web-app' não foi removido corretamente."
          - command: "kubectl get pod -n desafío-ns problem-pod -o jsonpath='{.metadata.name}' 2>/dev/null || echo ''"
            expectedOutput: "problem-pod"
            errorMessage: "O pod 'problem-pod' foi removido, mas deberia continuar existindo."
          - command: "kubectl get service -n desafío-ns web-service -o jsonpath='{.metadata.name}' 2>/dev/null || echo ''"
            expectedOutput: "web-service"
            errorMessage: "O servicio 'web-service' foi removido, mas deberia continuar existindo."
